<?xml version="1.0"?>
<!-- source: https://github.com/srmainwaring/steer_bot/blob/master/steer_bot_description/urdf/wheel.xacro: -->

<!--
  Robot model adapted from https://github.com/CIR-KIT/steer_drive_ros/blob/kinetic-devel/steer_drive_controller/test/common/urdf/steerbot.xacro

  Modifications:
    Remove base_footprint link. Useful for navigation but not necessary for a simple example.
    Added materials for URDF
    Updated inertials

  Geometry:
    The Ackermann steering controllers require the longitudinal
    separation between the front and back wheel axes and the
    lateral separation between the left and right front steering axes.
    
    For this model:
    wheel_separation_h = wheel_base                          = 0.1125
    wheel_separation_w = base_width  + 2 * wheel_thickness/2 = 0.0734375
-->

<robot name="f1_car" xmlns:xacro="http://wiki.ros.org/xacro">

  <!-- Include xacro for inertials, materials, wheels and camera -->
  <xacro:include filename="$(find race_car_description)/urdf/wheel.xacro"/>
  <xacro:include filename="$(find race_car_description)/urdf/camera.xacro"/>

  <xacro:property name="robot_namespace" value="/"/>
  <!-- <xacro:property name="robot_namespace" value="/f1_car"/> -->

  <!-- Gazebo plugins -->
  <gazebo>
    <!-- Load ros_control plugin using the steer_bot_hardware_gazebo
    implementation of the hardware_interface::RobotHW -->
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>${robot_namespace}</robotNamespace>
      <robotSimType>steer_bot_hardware_gazebo/SteerBotHardwareGazebo</robotSimType>
      <!-- <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType> -->
      <legacyModeNS>false</legacyModeNS>
    </plugin>
  </gazebo>

  <!-- Math constants -->
  <xacro:property name="deg_to_rad" value="0.01745329251994329577"/>
  <xacro:property name="mass_multiplier" value="10"/>
  <xacro:property name="scale" value="32"/>

  <!-- Robot base dimensions -->
  <xacro:property name="base_length" value="${5.5 / scale}" /> 
  <xacro:property name="base_width" value="${2.0 / scale}" /> 
  <xacro:property name="base_height" value="${1.0 / scale}" /> 
  <xacro:property name="base_mass" value="${850 / (scale*scale*scale) * mass_multiplier}" /> 

  <!-- Wheel link dimensions -->
  <xacro:property name="wheel_radius" value="${18*0.0254/2 / scale}" />
  <xacro:property name="wheel_thickness" value="${0.35 / scale}" />
  <xacro:property name="wheel_mass" value="${10.5 / (scale*scale*scale) * mass_multiplier}" />

  <!-- Steering link dimensions -->
  <xacro:property name="steer_radius" value="${wheel_radius / 2}" />
  <xacro:property name="steer_thickness" value="${wheel_thickness / 4}" />
  <xacro:property name="steer_mass" value="${10.5 / (scale*scale*scale) * mass_multiplier}" />

  <!-- Axle positions -->
  <xacro:property name="wheelbase" value="${3.6 / scale}" />
  <xacro:property name="ride_height" value="${0.032 / scale}" />

  <!-- <xacro:property name="axle_offset_rear" value="0" /> -->
  <xacro:property name="axle_offset_rear" value="${wheel_radius}" />
  <xacro:property name="axle_offset_front" value="${base_length - axle_offset_rear - wheelbase}" />
  <xacro:property name="axle_height" value="${-base_height/2 - ride_height + wheel_radius}" />
  <xacro:property name="steer_offset" value="${steer_thickness}" />

  <!-- Camera dimensions -->
	<xacro:property name="camera_size" value="${0.2 / scale}"/>
	<xacro:property name="camera_width" value="${camera_size}"/>
	<xacro:property name="camera_thickness" value="${camera_size/2}"/>
	<xacro:property name="camera_height" value="${camera_size*2/3}"/>
	<xacro:property name="camera_mass" value="${1 / (scale*scale*scale) * mass_multiplier}"/>
	<xacro:property name="camera_forward_tilt_deg" value="10"/>

  <!-- Base link -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="green" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial 
        rpy="0 0 0" xyz="0 0 0"
        mass="${base_mass}"
        x="${base_length}" y="${base_width}" z="${base_height}" />
  </link>

  <!-- Camera -->
  <xacro:camera
    parent="base_link"
    camera_width="${camera_width}"
    camera_thickness="${camera_thickness}"
    camera_height="${camera_height}"
    forward_tilt="${camera_forward_tilt_deg}">
    <origin xyz="${base_length/2+camera_thickness/2} 0 ${base_height/2-camera_height/2}" 
            rpy="0 ${camera_forward_tilt_deg * deg_to_rad} 0"/>
  </xacro:camera>

  <!-- Front steer and rear wheel joints required for ackermann_steering_controller -->
  <xacro:front_steer
    name="front"
    parent="base"
    steer_radius="${steer_radius}"
    steer_thickness="${steer_thickness}" 
    steer_mass="${steer_mass}" 
    base_length="${base_length}"
    base_width="${base_width}"
    axle_offset="${axle_offset_front}"
    steer_height="${base_height/2+steer_offset}">
    <!-- steer_height="${wheel_radius+steer_offset}"> -->
  </xacro:front_steer>

  <xacro:rear_wheel
    name="rear"
    parent="base"
    wheel_radius="${wheel_radius/4}"
    wheel_thickness="${wheel_thickness/2}"
    wheel_mass="${wheel_mass/32}">
    <origin xyz="${-base_length/2+axle_offset_rear} 0 ${axle_height}" rpy="${-90 * deg_to_rad} 0 0"/>
  </xacro:rear_wheel>

  <!-- Steerable front wheels -->
  <xacro:front_wheel_lr 
    name="front_right"
    parent="base"
    reflect="-1"
    wheel_radius="${wheel_radius}"
    wheel_thickness="${wheel_thickness}" 
    wheel_mass="${wheel_mass}" 
    steer_radius="${steer_radius}"
    steer_thickness="${steer_thickness}" 
    steer_mass="${steer_mass}" 
    base_length="${base_length}"
    base_width="${base_width}"
    axle_offset="${axle_offset_front}"
    steer_height="${base_height/2+steer_offset}"
    axle_height = "${axle_height}">
  </xacro:front_wheel_lr>
  <xacro:front_wheel_lr
    name="front_left"
    parent="base"
    reflect="1"
    wheel_radius="${wheel_radius}"
    wheel_thickness="${wheel_thickness}"
    wheel_mass="${wheel_mass}" 
    steer_radius="${steer_radius}"
    steer_thickness="${steer_thickness}" 
    steer_mass="${steer_mass}" 
    base_length="${base_length}"
    base_width="${base_width}"
    axle_offset="${axle_offset_front}"
    steer_height="${base_height/2+steer_offset}"
    axle_height = "${axle_height}">
  </xacro:front_wheel_lr>

  <!-- Rear wheels -->
  <xacro:rear_wheel_lr
    name="rear_right"
    parent="base"
    wheel_radius="${wheel_radius}"
    wheel_thickness="${wheel_thickness}"
    wheel_mass="${wheel_mass}">
    <origin xyz="${-base_length/2+axle_offset_rear} ${-base_width/2-wheel_thickness/2} ${axle_height}" 
            rpy="${-90 * deg_to_rad} 0 0"/>
  </xacro:rear_wheel_lr>
  <xacro:rear_wheel_lr
    name="rear_left"
    parent="base"
    wheel_radius="${wheel_radius}"
    wheel_thickness="${wheel_thickness}"
    wheel_mass="${wheel_mass}">
    <origin xyz="${-base_length/2+axle_offset_rear} ${+base_width/2+wheel_thickness/2} ${axle_height}" 
            rpy="${-90 * deg_to_rad} 0 0"/>
  </xacro:rear_wheel_lr>

  <!-- Colour -->
  <gazebo reference="base_link">
    <material>Gazebo/Green</material>
  </gazebo>

</robot>